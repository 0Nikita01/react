[{"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\index.js":"1","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\App.js":"2","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\components\\Footer\\index.js":"3","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\AboutPage\\index.js":"4","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\ContactPage\\index.js":"5","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\components\\MenuHeader\\index.js":"6","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\NotFound\\index.js":"7","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\Home\\index.js":"8","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\Game\\index.js":"9","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\service\\firebase.js":"10","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\components\\Menu\\index.js":"11","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\components\\Navbar\\index.js":"12","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\components\\Layout\\index.js":"13","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\components\\Header\\index.js":"14","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\components\\PockemonCard\\index.js":"15","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\context\\firebaseContext.js":"16","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\Game\\routes\\Finish\\index.js":"17","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\Game\\routes\\Board\\index.js":"18","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\Game\\routes\\Start\\index.js":"19","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\context\\pokemonContext.js":"20","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\Game\\routes\\Board\\component\\PlayerBoard\\index.js":"21"},{"size":253,"mtime":1612468266144,"results":"22","hashOfConfig":"23"},{"size":1491,"mtime":1612998533907,"results":"24","hashOfConfig":"23"},{"size":323,"mtime":1611884249691,"results":"25","hashOfConfig":"23"},{"size":194,"mtime":1612468266146,"results":"26","hashOfConfig":"23"},{"size":200,"mtime":1612468266146,"results":"27","hashOfConfig":"23"},{"size":520,"mtime":1612468266068,"results":"28","hashOfConfig":"23"},{"size":184,"mtime":1612468266232,"results":"29","hashOfConfig":"23"},{"size":317,"mtime":1613144230139,"results":"30","hashOfConfig":"23"},{"size":1364,"mtime":1612998533910,"results":"31","hashOfConfig":"23"},{"size":1225,"mtime":1612998533922,"results":"32","hashOfConfig":"23"},{"size":1075,"mtime":1612468266067,"results":"33","hashOfConfig":"23"},{"size":595,"mtime":1613144213714,"results":"34","hashOfConfig":"23"},{"size":889,"mtime":1612199567395,"results":"35","hashOfConfig":"23"},{"size":814,"mtime":1612468266067,"results":"36","hashOfConfig":"23"},{"size":2088,"mtime":1613152392016,"results":"37","hashOfConfig":"23"},{"size":87,"mtime":1612998533909,"results":"38","hashOfConfig":"23"},{"size":156,"mtime":1612998533920,"results":"39","hashOfConfig":"23"},{"size":3711,"mtime":1613153048281,"results":"40","hashOfConfig":"23"},{"size":4068,"mtime":1612998533920,"results":"41","hashOfConfig":"23"},{"size":86,"mtime":1612998533909,"results":"42","hashOfConfig":"23"},{"size":1379,"mtime":1613150651525,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"nw91lq",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\index.js",[],["91","92"],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\App.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\components\\Footer\\index.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\AboutPage\\index.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\ContactPage\\index.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\components\\MenuHeader\\index.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\NotFound\\index.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\Home\\index.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\Game\\index.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\service\\firebase.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\components\\Menu\\index.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\components\\Navbar\\index.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\components\\Layout\\index.js",[],["93","94"],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\components\\Header\\index.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\components\\PockemonCard\\index.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\context\\firebaseContext.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\Game\\routes\\Finish\\index.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\Game\\routes\\Board\\index.js",["95","96"],"import { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { PokemonContext } from '../../../../context/pokemonContext';\r\nimport PockemonCard from '../../../../components/PockemonCard';\r\nimport s from './style.module.css';\r\nimport PlayerBoard from './component/PlayerBoard';\r\n\r\nconst BoardPage = () => {\r\n    const { pokemon } = useContext(PokemonContext);\r\n    const [board, setBoard] = useState([]);\r\n    const [player1, setPlayer1] = useState(() => {\r\n        return Object.values(pokemon).map(item => ({\r\n            ...item,\r\n            possession: 'blue',\r\n        }))\r\n    });\r\n    const [player2, setPlayer2] = useState([]);\r\n    const [choiceCard, setChoiceCard] = useState(null)\r\n    const history = useHistory();\r\n\r\n    useEffect(async () => {\r\n        const boardResponce = await fetch('https://reactmarathon-api.netlify.app/api/board');\r\n        const boardRequest = await boardResponce.json();\r\n\r\n        setBoard(boardRequest.data);\r\n\r\n        const player2Response = await fetch('https://reactmarathon-api.netlify.app/api/create-player');\r\n        const player2Request = await player2Response.json();\r\n        setPlayer2(() => {\r\n            return player2Request.data.map(item => ({\r\n                ...item,\r\n                possession: 'red',\r\n            }))\r\n        });\r\n    }, []);\r\n\r\n    /*\r\n    if (Object.keys(pokemon).length === 0){\r\n        history.replace('/game');\r\n    }*/\r\n\r\n    const handlerClickBoardPlate = async (position) => {\r\n        console.log(position);\r\n        console.log(choiceCard);\r\n        if (choiceCard) {\r\n            const params = {\r\n                position,\r\n                card: choiceCard,\r\n                board,\r\n            };\r\n\r\n            const res = await fetch('https://reactmarathon-api.netlify.app/api/players-turn', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(params),\r\n            });\r\n\r\n            const request = await res.json();\r\n            setBoard(request.data);\r\n\r\n            if (choiceCard.player === 1) {\r\n                setPlayer1(prevState => prevState.filter(item => item.id !== choiceCard.id));\r\n            }\r\n            if (choiceCard.player === 2) {\r\n                setPlayer2(prevState => prevState.filter(item => item.id !== choiceCard.id));\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.root}>\r\n\t\t\t<div className={s.playerOne}>\r\n                {\r\n                    <PlayerBoard \r\n                        player={1}\r\n                        cards={player1} \r\n                        onClickCard={(card) => setChoiceCard(card)}\r\n                    />\r\n                }\r\n\t\t\t</div>\r\n            <div className={s.board}>\r\n                {\r\n                    board.map(item => (\r\n                        <div\r\n                            key={item.position}\r\n                            className={s.boardPlate}\r\n                            onClick={() => !item.card && handlerClickBoardPlate(item.position)}\r\n                        >\r\n                            {\r\n                                item.card && <PockemonCard {...item.card} isActive minimize/>\r\n                            }\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className={s.playerTwo}>\r\n                <PlayerBoard \r\n                    player={2}\r\n                    cards={player2} \r\n                    onClickCard={(card) => setChoiceCard(card)}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoardPage;","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\Game\\routes\\Start\\index.js",["97"],"import { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PockemonCard from '../../../../components/PockemonCard';\r\nimport s from './style.module.css';\r\nimport { FireBaseContext } from '../../../../context/firebaseContext';\r\nimport { PokemonContext } from '../../../../context/pokemonContext';\r\n\r\nconst StartPage = ({onChangePage}) => {\r\n    const firebase = useContext(FireBaseContext);\r\n    const pokemonContext = useContext(PokemonContext);\r\n    const history = useHistory();\r\n    const [Pockemons, setPockemons] = useState({});\r\n    useEffect(() => {\r\n        firebase.getPokemonSoket((Pockemons) => {\r\n            setPockemons(Pockemons);\r\n        });\r\n\r\n        return () => firebase.offPokemonSoket();\r\n    }, []);\r\n\r\n    const handleCardClick = (key) => {\r\n        const pokemon = {...Pockemons[key]}\r\n        pokemonContext.onSelectedPokemons(key, pokemon);\r\n        setPockemons(prevState => ({\r\n            ...prevState,\r\n            [key]: {\r\n                ...prevState[key],\r\n                selected: !prevState[key].selected,\r\n            }\r\n        }))\r\n        /*\r\n        setPockemons(prevState => {\r\n            return Object.entries(prevState).reduce((acc, item) => {\r\n                const pokemon = {...item[1]};\r\n                if (pokemon.id === id) {\r\n                    pokemon.active = !pokemon.active;\r\n                    firebase.postPokemon(item[0], pokemon);\r\n                };\r\n        \r\n                acc[item[0]] = pokemon;\r\n        \r\n                return acc;\r\n            }, {});\r\n        \r\n        });\r\n        \r\n\r\n        setPockemons(prevState => prevState.map(item => {\r\n            const newItem = {...item}\r\n            if (newItem[\"id\"] === id){\r\n                newItem[\"active\"] = !newItem[\"active\"];\r\n            }\r\n            return newItem;\r\n        }));*/\r\n    };\r\n\r\n    /*\r\n    const randomID = (min, max, district = false) => {\r\n        let rand = Math.round(min - 0.5 + Math.random() * (max - min + 1));\r\n\r\n        if (district)\r\n        {\r\n            Object.entries(Pockemons).forEach(item => {\r\n                if (rand === item[1].id)\r\n                {\r\n                    rand = randomID(min, max, district);\r\n                }\r\n            });\r\n        }\r\n        \r\n        return rand;\r\n    }\r\n    \r\n\r\n    const AddNewPokemon = () => {\r\n        const id = randomID(1, 100, true);\r\n        const index = randomID(0, 4);\r\n        const newPokemon = POCKEMONS[index];\r\n        newPokemon.id = id;\r\n        firebase.addPokemon(newPokemon);\r\n        /*\r\n        database.ref('pokemons/' + newKey)\r\n            .set(newPokemon)\r\n            .then(() => getPockemons());\r\n    }*/\r\n\r\n    const handlerStartGameClick = () => {\r\n        history.push('/game/board');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.button}>\r\n                <button \r\n                onClick={handlerStartGameClick}\r\n                disabled={Object.keys(pokemonContext.pokemon).length < 5}\r\n                >\r\n                    START GAME\r\n                </button>\r\n            </div>\r\n            <div className={s.flex}>\r\n\t\t\t\t{\r\n\t\t\t\t\tObject.entries(Pockemons).map(([key, {name, img, id, type, values, selected}]) => \r\n                        <PockemonCard \r\n                            className={s.card} \r\n                            key={key} \r\n                            name={name} \r\n                            img={img} \r\n                            id={id} \r\n                            type={type} \r\n                            values={values} \r\n                            isActive={true} \r\n                            isSelected={selected} \r\n                            cardClick={() => {\r\n                                if (Object.keys(pokemonContext.pokemon).length < 5 || selected){\r\n                                    handleCardClick(key)\r\n                                }\r\n                            }}\r\n                        />\r\n                    )\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StartPage;","D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\context\\pokemonContext.js",[],"D:\\Nikita.Programms\\React\\pockemon\\pockemon\\src\\routes\\Game\\routes\\Board\\component\\PlayerBoard\\index.js",[],["98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"100","replacedBy":"104"},{"ruleId":"102","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":19,"column":11,"nodeType":"108","messageId":"109","endLine":19,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":21,"column":15,"nodeType":"112","endLine":35,"endColumn":6},{"ruleId":"110","severity":1,"message":"113","line":19,"column":8,"nodeType":"114","endLine":19,"endColumn":10,"suggestions":"115"},{"ruleId":"100","replacedBy":"116"},{"ruleId":"102","replacedBy":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],["118"],["119"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.","ArrayExpression",["120"],["118"],["119"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [firebase]",{"range":"123","text":"124"},[772,774],"[firebase]"]