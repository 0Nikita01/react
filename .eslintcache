[{"/Users/sabina/Desktop/React/react/src/index.js":"1","/Users/sabina/Desktop/React/react/src/App.js":"2","/Users/sabina/Desktop/React/react/src/store/index.js":"3","/Users/sabina/Desktop/React/react/src/service/firebase.js":"4","/Users/sabina/Desktop/React/react/src/context/firebaseContext.js":"5","/Users/sabina/Desktop/React/react/src/store/pokemons.js":"6","/Users/sabina/Desktop/React/react/src/components/PrivateRoute/index.js":"7","/Users/sabina/Desktop/React/react/src/components/Footer/index.js":"8","/Users/sabina/Desktop/React/react/src/routes/Game/index.js":"9","/Users/sabina/Desktop/React/react/src/routes/NotFound/index.js":"10","/Users/sabina/Desktop/React/react/src/components/MenuHeader/index.js":"11","/Users/sabina/Desktop/React/react/src/routes/Home/index.js":"12","/Users/sabina/Desktop/React/react/src/routes/AboutPage/index.js":"13","/Users/sabina/Desktop/React/react/src/routes/ContactPage/index.js":"14","/Users/sabina/Desktop/React/react/src/context/pokemonContext.js":"15","/Users/sabina/Desktop/React/react/src/components/Menu/index.js":"16","/Users/sabina/Desktop/React/react/src/components/Navbar/index.js":"17","/Users/sabina/Desktop/React/react/src/components/Modal/index.js":"18","/Users/sabina/Desktop/React/react/src/components/LoginForm/index.js":"19","/Users/sabina/Desktop/React/react/src/components/Header/index.js":"20","/Users/sabina/Desktop/React/react/src/routes/Game/routes/Board/index.js":"21","/Users/sabina/Desktop/React/react/src/routes/Game/routes/Finish/index.js":"22","/Users/sabina/Desktop/React/react/src/routes/Game/routes/Start/index.js":"23","/Users/sabina/Desktop/React/react/src/components/Input/index.js":"24","/Users/sabina/Desktop/React/react/src/components/PockemonCard/index.js":"25","/Users/sabina/Desktop/React/react/src/routes/Game/routes/Board/component/PlayerBoard/index.js":"26","/Users/sabina/Desktop/React/react/src/store/user.js":"27"},{"size":394,"mtime":1615836412463,"results":"28","hashOfConfig":"29"},{"size":2015,"mtime":1615846903509,"results":"30","hashOfConfig":"29"},{"size":244,"mtime":1615839787623,"results":"31","hashOfConfig":"29"},{"size":1224,"mtime":1615836412479,"results":"32","hashOfConfig":"29"},{"size":85,"mtime":1615836412463,"results":"33","hashOfConfig":"29"},{"size":1394,"mtime":1615846009892,"results":"34","hashOfConfig":"29"},{"size":390,"mtime":1615836412462,"results":"35","hashOfConfig":"29"},{"size":310,"mtime":1615836412458,"results":"36","hashOfConfig":"29"},{"size":1454,"mtime":1615836412465,"results":"37","hashOfConfig":"29"},{"size":173,"mtime":1615836412479,"results":"38","hashOfConfig":"29"},{"size":3167,"mtime":1615847584829,"results":"39","hashOfConfig":"29"},{"size":498,"mtime":1615836412474,"results":"40","hashOfConfig":"29"},{"size":183,"mtime":1615836412464,"results":"41","hashOfConfig":"29"},{"size":189,"mtime":1615836412464,"results":"42","hashOfConfig":"29"},{"size":84,"mtime":1615836412463,"results":"43","hashOfConfig":"29"},{"size":1031,"mtime":1615836412460,"results":"44","hashOfConfig":"29"},{"size":1268,"mtime":1615843454268,"results":"45","hashOfConfig":"29"},{"size":981,"mtime":1615836412460,"results":"46","hashOfConfig":"29"},{"size":1494,"mtime":1615836412459,"results":"47","hashOfConfig":"29"},{"size":649,"mtime":1615836412458,"results":"48","hashOfConfig":"29"},{"size":4786,"mtime":1615836412471,"results":"49","hashOfConfig":"29"},{"size":3737,"mtime":1615836412472,"results":"50","hashOfConfig":"29"},{"size":4231,"mtime":1615845107692,"results":"51","hashOfConfig":"29"},{"size":632,"mtime":1615836412459,"results":"52","hashOfConfig":"29"},{"size":2063,"mtime":1615836412462,"results":"53","hashOfConfig":"29"},{"size":1340,"mtime":1615836412470,"results":"54","hashOfConfig":"29"},{"size":1657,"mtime":1615847627494,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"dceyts",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sabina/Desktop/React/react/src/index.js",[],["114","115"],"/Users/sabina/Desktop/React/react/src/App.js",["116"],"/Users/sabina/Desktop/React/react/src/store/index.js",[],"/Users/sabina/Desktop/React/react/src/service/firebase.js",[],"/Users/sabina/Desktop/React/react/src/context/firebaseContext.js",[],"/Users/sabina/Desktop/React/react/src/store/pokemons.js",["117"],"import { createSlice } from '@reduxjs/toolkit';\n//import { act } from '@testing-library/react';\nimport FirebaseClass from '../service/firebase';\nimport { selectLocalID } from './user';\n\nexport const slice = createSlice({\n    name: 'pokemons',\n    initialState: {\n        isLoading: false,\n        data: {},\n        error: null,\n    },\n    reducers: {\n        fetchPokemons: state => ({\n            ...state,\n            isLoading: true,\n        }),\n        fetchPokemonsResolve: (state, action) => ({\n            ...state,\n            isLoading: false,\n            data: action.payload,\n        }),\n        fetchPokemonsReject: (state, action) => ({\n            ...state,\n            isLoading: false,\n            data: {},\n            error: action.payload,\n        }),\n    }\n});\n\nexport const {fetchPokemons, fetchPokemonsResolve, fetchPokemonsReject} = slice.actions;\n\nexport const selectPokemonsLoading = state => state.pokemons.isLoading;\nexport const selectPokemonsData = state => state.pokemons.data;\n\nexport const getPokemonsAsync = () => async (dispatch, getState) => {\n    const localId = selectLocalID(getState());\n    console.log(localId);\n    dispatch(fetchPokemons());\n    const data = await fetch(`https://pokemon-game-3cae4-default-rtdb.firebaseio.com/${localId}/pokemons.json`).then(res => res.json());\n    dispatch(fetchPokemonsResolve(data));\n}\n\nexport default slice.reducer;","/Users/sabina/Desktop/React/react/src/components/PrivateRoute/index.js",[],"/Users/sabina/Desktop/React/react/src/components/Footer/index.js",[],"/Users/sabina/Desktop/React/react/src/routes/Game/index.js",[],"/Users/sabina/Desktop/React/react/src/routes/NotFound/index.js",[],"/Users/sabina/Desktop/React/react/src/components/MenuHeader/index.js",[],"/Users/sabina/Desktop/React/react/src/routes/Home/index.js",[],"/Users/sabina/Desktop/React/react/src/routes/AboutPage/index.js",[],"/Users/sabina/Desktop/React/react/src/routes/ContactPage/index.js",[],"/Users/sabina/Desktop/React/react/src/context/pokemonContext.js",[],"/Users/sabina/Desktop/React/react/src/components/Menu/index.js",[],"/Users/sabina/Desktop/React/react/src/components/Navbar/index.js",[],"/Users/sabina/Desktop/React/react/src/components/Modal/index.js",[],"/Users/sabina/Desktop/React/react/src/components/LoginForm/index.js",[],"/Users/sabina/Desktop/React/react/src/components/Header/index.js",[],"/Users/sabina/Desktop/React/react/src/routes/Game/routes/Board/index.js",["118","119","120","121"],"import { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PokemonContext } from '../../../../context/pokemonContext';\nimport PockemonCard from '../../../../components/PockemonCard';\nimport s from './style.module.css';\nimport PlayerBoard from './component/PlayerBoard';\n\nconst counterWin = (board, player1, player2) => {\n    let player1Count = player1.length;\n    let player2Count = player2.length;\n\n    board.forEach(item => {\n        if (item.card.possession === 'red') {\n            player2Count++;\n        }\n\n        if (item.card.possession === 'blue') {\n            player1Count++;\n        }\n    });\n\n    return [player1Count, player2Count];\n}\n\nconst BoardPage = () => {\n    const pokemonContext = useContext(PokemonContext);\n    const { pokemon } = pokemonContext;\n    const [board, setBoard] = useState([]);\n    const [player1, setPlayer1] = useState(() => {\n        return Object.values(pokemon).map(item => ({\n            ...item,\n            possession: 'blue',\n        }))\n    });\n    const [player2, setPlayer2] = useState([]);\n    const [choiceCard, setChoiceCard] = useState(null);\n    const [steps, setSteps] = useState(0);\n    const history = useHistory();\n\n    useEffect(async () => {\n        const boardResponce = await fetch('https://reactmarathon-api.netlify.app/api/board');\n        const boardRequest = await boardResponce.json();\n\n        setBoard(boardRequest.data);\n\n        const player2Response = await fetch('https://reactmarathon-api.netlify.app/api/create-player');\n        const player2Request = await player2Response.json();\n        console.log(player2Request);\n        player2Request.data.map((item, key) => {\n            pokemonContext.onSelectedPokemons(key, item);\n        })\n        setPlayer2(() => {\n            return player2Request.data.map(item => ({\n                ...item,\n                possession: 'red',\n            }))\n        });\n    }, []);\n\n    if (Object.keys(pokemon).length === 0){\n        history.replace('/game');\n    }\n\n    const handlerClickBoardPlate = async (position) => {\n        console.log(position);\n        console.log(choiceCard);\n        if (choiceCard) {\n            const params = {\n                position,\n                card: choiceCard,\n                board,\n            };\n\n            const res = await fetch('https://reactmarathon-api.netlify.app/api/players-turn', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(params),\n            });\n\n            const request = await res.json();\n\n            if (choiceCard.player === 1) {\n                setPlayer1(prevState => prevState.filter(item => item.id !== choiceCard.id));\n            }\n            if (choiceCard.player === 2) {\n                setPlayer2(prevState => prevState.filter(item => item.id !== choiceCard.id));\n            }\n            setBoard(request.data);\n            setSteps(prevState => {\n                const count = prevState + 1;\n                return count;\n            })\n        }\n    }\n\n    useEffect(() => {\n        if (steps === 9) {\n            const [count1, count2] = counterWin(board, player1, player2);\n\n            if (count1 > count2) {\n                alert('WIN');\n            }\n            else if (count1 < count2) {\n                alert('LOSE');\n            }\n            else {\n                alert('DRAW');\n            }\n            history.replace('/game/finish');\n            \n        }\n    }, [steps, board])\n\n    return (\n        <div className={s.root}>\n\t\t\t<div className={s.playerOne}>\n                {\n                    <PlayerBoard \n                        player={1}\n                        cards={player1} \n                        onClickCard={(card) => setChoiceCard(card)}\n                    />\n                }\n\t\t\t</div>\n            <div className={s.board}>\n                {\n                    board.map(item => (\n                        <div\n                            key={item.position}\n                            className={s.boardPlate}\n                            onClick={() => !item.card && handlerClickBoardPlate(item.position)}\n                        >\n                            {\n                                item.card && <PockemonCard {...item.card} isActive minimize/>\n                            }\n                        </div>\n                    ))\n                }\n            </div>\n            <div className={s.playerTwo}>\n                <PlayerBoard \n                    player={2}\n                    cards={player2} \n                    onClickCard={(card) => setChoiceCard(card)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default BoardPage;","/Users/sabina/Desktop/React/react/src/routes/Game/routes/Finish/index.js",[],"/Users/sabina/Desktop/React/react/src/routes/Game/routes/Start/index.js",["122","123","124"],"import { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PockemonCard from '../../../../components/PockemonCard';\nimport s from './style.module.css';\nimport { FireBaseContext } from '../../../../context/firebaseContext';\nimport { PokemonContext } from '../../../../context/pokemonContext';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getPokemonsAsync, selectPokemonsData, selectPokemonsLoading} from '../../../../store/pokemons';\n\nconst StartPage = ({onChangePage}) => {\n    const firebase = useContext(FireBaseContext);\n    const pokemonContext = useContext(PokemonContext);\n    const isLoading = useSelector(selectPokemonsLoading);\n    const pokemonsRedux = useSelector(selectPokemonsData);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [Pockemons, setPockemons] = useState({});\n\n    useEffect(() => {\n        dispatch(getPokemonsAsync());\n    }, []);\n    \n    useEffect(() => {\n        setPockemons(pokemonsRedux);\n    }, [pokemonsRedux])\n\n    const handleCardClick = (key) => {\n        const pokemon = {...Pockemons[key]}\n        pokemonContext.onSelectedPokemons(key, pokemon);\n        setPockemons(prevState => ({\n            ...prevState,\n            [key]: {\n                ...prevState[key],\n                selected: !prevState[key].selected,\n            }\n        }))\n        /*\n        setPockemons(prevState => {\n            return Object.entries(prevState).reduce((acc, item) => {\n                const pokemon = {...item[1]};\n                if (pokemon.id === id) {\n                    pokemon.active = !pokemon.active;\n                    firebase.postPokemon(item[0], pokemon);\n                };\n        \n                acc[item[0]] = pokemon;\n        \n                return acc;\n            }, {});\n        \n        });\n        \n\n        setPockemons(prevState => prevState.map(item => {\n            const newItem = {...item}\n            if (newItem[\"id\"] === id){\n                newItem[\"active\"] = !newItem[\"active\"];\n            }\n            return newItem;\n        }));*/\n    };\n\n    /*\n    const randomID = (min, max, district = false) => {\n        let rand = Math.round(min - 0.5 + Math.random() * (max - min + 1));\n\n        if (district)\n        {\n            Object.entries(Pockemons).forEach(item => {\n                if (rand === item[1].id)\n                {\n                    rand = randomID(min, max, district);\n                }\n            });\n        }\n        \n        return rand;\n    }\n    \n\n    const AddNewPokemon = () => {\n        const id = randomID(1, 100, true);\n        const index = randomID(0, 4);\n        const newPokemon = POCKEMONS[index];\n        newPokemon.id = id;\n        firebase.addPokemon(newPokemon);\n        /*\n        database.ref('pokemons/' + newKey)\n            .set(newPokemon)\n            .then(() => getPockemons());\n    }*/\n\n    const handlerStartGameClick = () => {\n        history.push('/game/board');\n    }\n\n    return (\n        <>\n            <div className={s.button}>\n                <button \n                onClick={handlerStartGameClick}\n                disabled={Object.keys(pokemonContext.pokemon).length < 5}\n                >\n                    START GAME\n                </button>\n            </div>\n            <div className={s.flex}>\n\t\t\t\t{\n\t\t\t\t\tObject.entries(Pockemons).map(([key, {name, img, id, type, values, selected}]) => \n                        <PockemonCard \n                            className={s.card} \n                            key={key} \n                            name={name} \n                            img={img} \n                            id={id} \n                            type={type} \n                            values={values} \n                            isActive={true} \n                            isSelected={selected} \n                            cardClick={() => {\n                                if (Object.keys(pokemonContext.pokemon).length < 5 || selected){\n                                    handleCardClick(key)\n                                }\n                            }}\n                        />\n                    )\n\t\t\t\t}\n\t\t\t</div>\n        </>\n    );\n};\n\nexport default StartPage;","/Users/sabina/Desktop/React/react/src/components/Input/index.js",[],"/Users/sabina/Desktop/React/react/src/components/PockemonCard/index.js",[],"/Users/sabina/Desktop/React/react/src/routes/Game/routes/Board/component/PlayerBoard/index.js",[],"/Users/sabina/Desktop/React/react/src/store/user.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":28,"column":5,"nodeType":"131","endLine":28,"endColumn":7,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":21},{"ruleId":"129","severity":1,"message":"137","line":40,"column":15,"nodeType":"138","endLine":58,"endColumn":6},{"ruleId":"139","severity":1,"message":"140","line":49,"column":45,"nodeType":"138","messageId":"141","endLine":49,"endColumn":47},{"ruleId":"129","severity":1,"message":"142","line":58,"column":8,"nodeType":"131","endLine":58,"endColumn":10,"suggestions":"143"},{"ruleId":"129","severity":1,"message":"144","line":114,"column":8,"nodeType":"131","endLine":114,"endColumn":22,"suggestions":"145"},{"ruleId":"133","severity":1,"message":"146","line":11,"column":11,"nodeType":"135","messageId":"136","endLine":11,"endColumn":19},{"ruleId":"133","severity":1,"message":"147","line":13,"column":11,"nodeType":"135","messageId":"136","endLine":13,"endColumn":20},{"ruleId":"129","severity":1,"message":"130","line":21,"column":8,"nodeType":"131","endLine":21,"endColumn":10,"suggestions":"148"},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["151"],"no-unused-vars","'FirebaseClass' is defined but never used.","Identifier","unusedVar","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'pokemonContext'. Either include it or remove the dependency array.",["152"],"React Hook useEffect has missing dependencies: 'history', 'player1', and 'player2'. Either include them or remove the dependency array.",["153"],"'firebase' is assigned a value but never used.","'isLoading' is assigned a value but never used.",["154"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"155","fix":"161"},"Update the dependencies array to be: [dispatch]",{"range":"162","text":"163"},"Update the dependencies array to be: [pokemonContext]",{"range":"164","text":"165"},"Update the dependencies array to be: [steps, board, player1, player2, history]",{"range":"166","text":"167"},{"range":"168","text":"163"},[1144,1146],"[dispatch]",[1943,1945],"[pokemonContext]",[3557,3571],"[steps, board, player1, player2, history]",[955,957]]